#from simple_salesforce import Salesforce
import csv
import os
import urllib
import urllib.parse
import urllib.request
#import urllib3
import json
import pprint

consumer_key = '<Id from the Connected app in salesforce>'
consumer_secret = '<secret key from Connected app in salesforce>'
username = '<UserName>'
password = '<password>'
login_server = 'https://test.salesforce.com'


#sf = Salesforce(username='<UserName>', password='<password>', security_token='', sandbox=True)

# Do OAuth username/password
token_url = login_server+'/services/oauth2/token'
 
params = urllib.parse.urlencode({
  'grant_type': 'password',
  'client_id': consumer_key,
  'client_secret': consumer_secret,
  'username': username,
  'password': password
})
params = params.encode('utf-8') 
data = urllib.request.urlopen(token_url, params).read()
#pprint.pprint(data)
data = data.decode("utf-8")
oauth = json.loads(data)
pprint.pprint(oauth)
 
# Now do a query
params = urllib.parse.urlencode({
  'q': 'SELECT Name FROM Account'
})
params = params.encode('utf-8') 
#query_url = oauth['instance_url']+'/services/data/v23.0/query?%s' % params
#query_url =  oauth['instance_url']+'/services/data/v28.0/tooling/sobjects'
sobjects_url =  oauth['instance_url']+'/services/data/v32.0/sobjects'

headers = {
  'Authorization': 'Bearer '+oauth['access_token']
}
 
req = urllib.request.Request(sobjects_url, None, headers)
pprint.pprint('Get sObjects Started')
data = urllib.request.urlopen(req).read()
pprint.pprint('Get sObjects Done')
data = data.decode("utf-8")
result = json.loads(data)
#pprint.pprint(result['sobjects'])

pprint.pprint(result['sobjects'][0]['name'])
pprint.pprint(result['sobjects'][0]['customSetting'])

csNames = []
for tmp in (result['sobjects']):
    if (tmp['customSetting']) :
        pprint.pprint(tmp['name'])
        csNames.append(tmp['name'])


pprint.pprint(csNames)

desUrl = oauth['instance_url']+'/services/data/v32.0/sobjects/'

import time
timestr = time.strftime("%Y%m%d-%H%M%S")
fileToWrite = open('CustomSettingDate_'+timestr+'.txt','w') # name of the output file

for nme in csNames:   #csNames[0:]
    tgtUrl = desUrl+nme+'/describe'
    req = urllib.request.Request(tgtUrl, None, headers)
    #pprint.pprint('Get sObjects Started')
    data = urllib.request.urlopen(req).read()
    #pprint.pprint('Get sObjects Done')
    data = data.decode("utf-8")
    result = json.loads(data)
    fieldNames = []
    for x in result['fields']:
        fieldNames.append(x['name'])
    query = ''
    for fn in fieldNames:
        query = query+ ','+ fn;
    query = 'select '+query[1:]+ ' From '+nme
    pprint.pprint(query)
    params = urllib.parse.urlencode({'q': query})
    print(params)

    qUrl = oauth['instance_url']+'/services/data/v32.0/query/?'
    qUrl = qUrl + params


    req = urllib.request.Request(qUrl, None, headers)
    data = urllib.request.urlopen(req).read()
    data = data.decode("utf-8")
    result = json.loads(data)
    #result = str(result)
    fileToWrite.write('***\n')
    fileToWrite.write(nme+'\n')
    for rec in result['records']:
        fileToWrite.write(str(rec)+'\n')
    fileToWrite.write('###----------------------------------------------------------------------------------\n\n')

''' 
'''   
